name: Build Linux Action

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

jobs:
  build_files_changed:
    if: github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-latest
    outputs:
      files_changed: ${{ steps.check_changed_files.outputs.FILES_CHANGED }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get changed files
        uses: tj-actions/changed-files@v35
        id: changed_files
      - name: Check changed files
        id: check_changed_files
        run: |
          for file in ${{ steps.changed_files.outputs.all_modified_files }}; do
            echo ""$file" was changed"
            if [ ! -z "$(echo $file | grep -E "*.cpp|*.hpp|CMakeLists.txt")" ]; then
              echo "FILES_CHANGED=true" >> $GITHUB_OUTPUT
              break
            fi
          done;

  build_client_linux:
    needs: build_files_changed
    if: always() && (needs.build_files_changed.outputs.files_changed == 'True' || github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    container: docker://alwyn974/rtype-build:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache libraries
        id: cache-libraries
        uses: actions/cache@v3
        with:
          path: ./client/build/_deps
          key: ${{ runner.os }}-libraries-${{ hashFiles('**/CMakeLists.txt') }}
      - name: Configure CMake
        shell: bash
        run: cmake -B ./client/build -S ./client -DUSE_CLANG_TIDY=ON
      - name: Build Debug
        shell: bash
        run: cmake --build ./client/build --config Debug -j`nproc`
      - name: Build Release
        shell: bash
        run: cmake --build ./client/build --config Release -j`nproc`

  build_server_linux:
    needs: build_files_changed
    if: always() && (needs.build_files_changed.outputs.files_changed == 'True' || github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    container: docker://alwyn974/rtype-build:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache libraries
        id: cache-libraries
        uses: actions/cache@v3
        with:
          path: ./server/build/_deps
          key: ${{ runner.os }}-libraries-${{ hashFiles('**/CMakeLists.txt') }}
      - name: Configure CMake
        shell: bash
        run: cmake -B ./server/build -S ./server -DUSE_CLANG_TIDY=ON
      - name: Build Debug
        shell: bash
        run: cmake --build ./server/build --config Debug -j`nproc`
      - name: Build Release
        shell: bash
        run: cmake --build ./server/build --config Release -j`nproc`